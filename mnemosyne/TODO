* Mnemosyne 2.0:

-default buttons

-statusbar

-complete UI controller review

-easier function to do tag detection in plugin

-Add cards dialog:
    -multiple categories
    -preview
    -toolbar with editing options (bold, latex, picture, ..)
    -button to switch between tag view and wysisyg view
    -read font, colour, etc, from card type css
    
-buttons in 'add card' are smaller than in the review widget.
 
-get rid of pygame, use phonon
-xml import tests (wcu, memaid, plconv)

-improve sphinxdocs: autoclass='both', document module members

-run convert to html after adding/modifying card?
-pregenerate q and a on mobile devices?

-test uploading of logs

-show latex errors in GUI?

-if we change a card id on import, by sure to put a message in the
 log to that effect, so that the statistics can keep track of it.
 
-upgrade from 1.x to 2.0 migration code: convert deck,
  move latex configuration files?
  
-remove start date?

-test map card type plugin

-more beginner tasks:
    -cramming scheduler
    -card type for memorising poems, close deletion (does not use FactView)

-UI: related cards

-http://apptools.com/examples/tableheight.php
-http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/442447

-modality of dialogs (mail by Nosai)

-change file suffix when changing export format

-basic graphical statistics

-import: duplicate check, ignore duplicates in answers

-checkbox to include inactive cards in statistics?

-alt tabbing gives low res icon.

-http://www.phon.ucl.ac.uk/home/mark/audio/play.htm

-make all subwindows remember their size

-activate necessary card types on plugin

-test Python 3.0 compliance

-dir = os.listdir(unicode(os.path.join(basedir, "history"))) doesn't
 seem to work when unicode is present in the path

-reactivate keyboard default 0 for cards with grade 0 or 1.

-button to go to next card in the list

-plugin for midi files

-'tooltips' during use: deactivate related cards, edit toolbar vs css, change 
 card type, relative path when adding pictures or sound.

-comment/tip about not having to do all your scheduled revisions in
 one sitting

-reenable datadir in setup.py

-rename edit_items, items, product tour at the source level

-detect and mark inverses on import

-what if doing 'add vice versa' when the id is already '.inv'?

-update XML import/export to new database format

-autosave

-teacher mode?

-make really sure the same question isn't asked twice in a row

-bug in Qt? : get rid of dummy '.' status tips

-bug in Qt? : shortcuts don't change back after changing 'show answer'
 button text

-bug in Qt? : spaces around images are not respected.

-does <p align="left"> work as advertised? Otherwise table tag.

-cntrl enter in add and edit instead of clicking ok

-more advanced plugin mechanism, plugin manager

-template for cards?

-language specific card types (arabic, japanese, integrated dictionary lookup)

-hierarchical categories

-advanced deck manager, with tree view, drag and drop to change categories,
 count of cards/facts... Option to show only related cards.

-make 'search' behave as a filter

-make <a> links clickable / animated GIFs

-Windows Mobile port

-update old plugins

-save category state


* Create testsuite:

-create test for adding cards
-create test for detecting duplication
-pythoscope? http://pypi.python.org/pypi/pythoscope/0.2.1
http://pythoscope.org/
-pylint, pyflakes




* After 2.0:

-three sided export?

-option to type right answer

-synonym handling plugin?

-regular expression search?

-add 'add card' option to deck manager?

-template expansion (disable add-vice-versa) ( both {../..} and {}..{})

-cloze deletion card type

-mnemosyne analysis as plugin

-remap keys as plugin

-active alert as plugin

-card type with prefilled fields

-zooming picture instead of scrollbars?


* Memosyne analysis: Add-on package to do full custom statistical
analysis on the entire history of your learning process.
Status: initial code written, but clean up needed.

-add to svn
-document
-release
-research section on web site


* Miscellaneous:

-smarter sorting. See suggestios by larryrenslow

-natural sort order of categories which contain numbers (1 vs 01)

-auto identifying similar cards

-unify number shortcuts (with and without Ctrl)

-pop-up of context info

-forward / backward when previewing cards in the database

-clean up interval when importing from txt

-make file format strings translatable

-paste from clipboard

-preselect all in some text fields, so that the users can start typing
 immediately

-feedback about uploads in GUI / add time-out

-drag and drop of pictures, sound files

-autoupgrade, or at least notify of available upgrade (needs a separate thread)

-remember window size set by the user?

-undo last grade + keyboard shortcut

-icon handling patch Dirk

-'teacher mode' on export, which allows pupils to update previously imported
 cards, as opposed to adding new cards. Implemented through id's of the form
 T.<fixed card id for all pupils>.<pupil user id>

-better sound replay support, through clicking on an icon

-integrate Mnemosyne analysis, advanced statistics, history,
 forgetting index, histogram of grades and intervals... (look at graphs
 in JMemorize)

-importing cards from rss feed

-clean obsolete latex images / autogenerate them

-investigate ridiculously large thinking times

-DTD for xml format

-priorities for categories?

-determine import / export file type based on suffix
 (i.e. remove file format field)? Probably not possible, as
 file dialogs only return filenames, not the chosen filter type.

-unify save and export?

-hints? separate mnemonics?

-corner case: If M > 0 and k < 0 then (a,b) is a local maximum
If M > 0 and k > 0 then (a,b) is a local minimum: eats < ... >

Far away:

-foreign language text widget, integrated with online dict,
 easy creation of new cards



* Plasma widget:

-Check Unicode

-set fonts, left align

-Allow clicking anywhere in the status window, rather than just on the
 text.

-Automatic detection of PyQt executable exit (bug in Superkaramba).


