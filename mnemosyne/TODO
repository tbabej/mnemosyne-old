-Hungarian translation by bkil (announce on website)
-hang on Spanish translation?

-omit parent arguments in dialogs? update how to write new frontend, dialogs.py
-replace reset by activate?
-do we need to start the scheduler in init? + logging

-merge start_review in activate? start_review to interface

-review widget starting code

-plugin: reset if scheduler or controller or both
-rename start review to reset
-move plugin review widget side effect to review controller 



-WM test and benchmark

-more tests

-move option to always randomise queue to config screen
-ditto for learn new related cards in same session

-hook up config screen

-infrastructure to make it easier to type certain symbols



-add 'update_card_active' (or something like that) to be called when
 adding cards or editing a card, so that 'active' is set correctly.
 Make the mechanism customisible with hooks, and document this in 
 card.py.


-see if graphical glitch is fixed with latest matplotlib version, reenable
 remember size

-make distrib

-warn when importing card type with duplicate id



-import

-on import, activate plugins, created inherited types necessary, reload counters

-on import don't add cards for which card type is not present

-import: duplicate check, ignore duplicates in answers

-don't change card id on import from old files

-migrate 1.x hack to map card type

-warn when not importing a duplicate card

-save after import, close blueprint

-make sure we log new card creation on import

-move media to media dir

-reset learning ahead queue after import

-xml import tests (wcu, memaid, plconv)

-detect and mark inverses on import

-update XML import/export to new database format

-option to add tags on import

-routines to do mass adding, don't save everytime, cache average easiness

-'teacher mode' on export, which allows pupils to update previously imported
 cards, as opposed to adding new cards. Implemented through id's of the form
 T.<fixed card id for all pupils>.<pupil user id>?

-when resetting learning data on export, can we export facts only? Tags are on
 a per card basis.

-don't recreate text logs upon import
 
-upgrade from 1.x to 2.0 migration code: convert deck,
  move latex configuration files?, import user id and config, ...
  item --> card


-new translation infrastructure
-handle deferred translation
-different translators for different users?


-corrupt icon



-do review_controller.rebuild_queue, reload counter after edit deck, clean duplicates, 
 activate cards, configuration 

-backup after unloading, not after exiting

-have hierarchy in plugin names


-adding a picture under Windows screws up / and \, and case

-need to store parent of tag?


-test uploading of logs, also in rollover


-activate cards, belonging to these card types, having any of these tags, but non of these, ro just none of these


-card browser

-make sure searching for a single unicode character works

-qsortfilter proxy

-show number of cards selected

-don't show inactive card types, but do show inactive tags

-card.in_view needed?

-make card browser remember its size


-sync protocol:
-deck name
-import
-server can report can refuse large files
-streaming compression
http://www.linuxtopia.org/online_books/programming_books/python_programming/python_ch33s08.html
-be sure to truncate time to int if it comes from other SRS systems
-make sure active gets updated too
-activating cards
-make sure to convert int(time.time()) to integer
-make sure all events make it to the sync protocol + formats

-better mechanism to have different renderers

-abstract statistics queries to database?


-time WM: history in same DB?

-check for related cards on same day could fail if minute level scheduler is used in the meantime
 (update comment in scheduler too)


-ampersand mnemonics everywhere


-partial implementation of type answer (none/all/special tag? Db Attribute? Button?)
-draw answer, make configurable by card type


-more plugin examples: file format, custom tag, activate all cards,
 last grade filter, always_shuffle?

-leech detection (mod 15)


-MVC: http://doc.trolltech.com/qq/qq24-delegates.html


-update ohloh?

-http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/442447?

-grep through TODO's in source code


-alt tabbing gives low res icon.

-add media player controls:
-http://www.phon.ucl.ac.uk/home/mark/audio/play.htm
-http://lists.trolltech.com/qt-interest/2008-05/thread00878-0.html

-option to add video

-modality of dialogs (mail by Nosai), Qt.WStyle_MinMax | Qt.WStyle_SysMenu))?

-allow edit current card and add card to be open at the same time?

-make file handling more robust, detect all errors (see mail by
 OldGrantonian)

-reenable datadir in setup.py

-make filters more efficients by using regex instead of loops.

-easier function to do tag detection in plugin

-skritter/cpod interop mail

-bug in Qt: setting default colour to black does not register the colour clicks.


-document cntrl enter in edit dialog instead of clicking ok

-tips (both on startup and on use): right click to add cards or sound, comma to 
 separate tag names, :: to separate hierarchies

-comment/tip about not having to do all your scheduled repetitions in
 one sitting

-update tooltips, inform Patrick

pylint:
	find ./mnemosyne/libmnemosyne/ -name \*.py | while read f ; do echo $f;pylint $f 2>&1|grep ^E:; done



-Contributors: Konrad Wojas, Laurent Mauron, Ed Bartosh, Mike Appleby



* After 2.0:

-website redesign? like http://hanzim.com/download.php

-add days since last rep / until next rep to statistics

-don't activate plugins until after clicking ok

-respect font in fact editor

-card type with prefilled fields

-detect wrong current date (last review in the future or way past)

-improve sphinxdocs: autoclass='both', document module members

-show latex errors in GUI?

-checkbox to include inactive cards in statistics?

-pythoscope? http://pypi.python.org/pypi/pythoscope/0.2.1
http://pythoscope.org/
-pyflakes?

-hover over extra hanzi information, hanzi statistics

-plugin for midi files

-chinese pod plugin

-"reschedule" cheating plugin


Multiuser statistics analysis:

-card: 'old_log_format', Boolean) : only needed during upgrade in memory, 
or persistent for the full server
-break out card ids to a different table and use _id as well
-more times from a later start date to save space?
-sql: insert or ignore statement, faster if adding same data twice is no problem


Windows Mobile client:

If your phone has a touchscreen use the pocket pc version. Otherwise try the smartphone version. 

-better way of making default actions visible? Call layout()?
-hook up scheduler rollover
-cramming widget, cache counters
-implement hide question
-icon
-more complete question box implementation
-installer
-set basedir in registry key
-install only pyc files
-mark card
-play around with MW5torage for easier sync and document this if it works.
-button color


-download media files when giving URL

-also allow import compressed backup files from within Mnemosyne

-three sided export?

-synonym handling plugin?

-regular expression search?

-add 'add card' option to deck manager?

-active alert as plugin


-zooming picture instead of scrollbars?
 
-animated strokes: http://lost-theory.org/ocrat/

-congratulations screen


* Miscellaneous:

-change file suffix when changing export format

-button after opening fact editor in edit deck to go to next card in the list

-sound recorder

-store _fact_ids_learned in config, such that they persist over sessions?

-auto identifying similar cards

-unify number shortcuts (with and without Ctrl)

-forward / backward when previewing cards in the database

-clean up interval when importing from txt

-paste from clipboard

-font and color comboboxes instead of dialogs in card appearance?

-preselect all in some text fields, so that the users can start typing
 immediately

-feedback about uploads in GUI / add time-out

-drag and drop of pictures, sound files

-autoupgrade, or at least notify of available upgrade (needs a separate thread)

-bundle docs

-undo last grade + keyboard shortcut

-http://labs.trolltech.com/blogs/2009/03/12/wysiwyg-html-editor/

-integrate Mnemosyne analysis, advanced statistics, history,
 forgetting index, histogram of grades and intervals... (look at graphs
 in JMemorize)

-importing cards from rss feed

-clean obsolete latex images / autogenerate them

-investigate ridiculously large thinking times

-DTD for xml format

-determine import / export file type based on suffix
 (i.e. remove file format field)? Probably not possible, as
 file dialogs only return filenames, not the chosen filter type.

-unify save and export?

-hints? separate mnemonics?

-swac plugin, smart.fm

-corner case: If M > 0 and k < 0 then (a,b) is a local maximum
If M > 0 and k > 0 then (a,b) is a local minimum: eats < ... >

