Memosyne analysis: Add-on package to do full custom statistical
analysis on the entire history of your learning process.
Status: initial code written, but clean up needed.

-add to svn
-document
-release
-research section on web site



Mnemosyne 1.1: upgrade from Qt3 to Qt4 for improved speed, and 
the possibility to get rid of some interface quirks

-front widget that allows copying, can produce scroll bars. This should
 solve issues when a card contains a very large picture

-MVC?

-instead of QListview, use the model/view framework from Qt4 to get a 
 much faster 'Edit Deck'. Test deleting large number of cards.

-change file suffix when changing export format

-add current card statistics to statistics dialog

-basic graphical statistics

-move latex customisation code to config.py

-refactor code to genenate default config.py

-write some more example plugins?

-checkbox to include inactive cards in statistics

-alt tabbing gives low res icon.

-Phonon backend instead of PyGame to improve sound playback

-prioritise lapsed cards in review

-dir = os.listdir(unicode(os.path.join(basedir, "history"))) doesn't
 seem to work when unicode is present in the path



Mnemosyne 1.2: SQL backend for better speed and lower memory requirements.
This will also lay the foundation for custom card types and make a port
to mobile devices (Maemo, Windows Mobile, ...) possible.

-move to sqlite backend (encode card relations and tag hierarchy in name, 
 multiple category fields per card)

-field for date added?

-rename edit_items, items, product tour at the source level

-detect and mark inverses

-what if doing 'add vice versa' when the id is already '.inv'?

-update XML import/export to new database format

-autosave

-make really sure the same question isn't asked twice in a row

-bug in Qt? : get rid of dummy '.' status tips

-bug in Qt? : shortcuts don't change back after changing 'show answer' 
 button text

-bug in Qt? : spaces around images are not respected.

-does <p align="left"> work as advertised? Otherwise table tag.

-consistent editing of vice versa and three-sided cards

-option to type right answer

-remove 'check duplicates when adding' option?

-three sided export?

-gettext io Qt localisation? Still need it partly for Qt itself, though.

-cntrl enter in add and edit instead of clicking ok

-color coding button groups?

-example plugin: randomise order of new cards


Mnemosyne 1.3:

-GUI support for multiple categories per card (Note: for categories relating
 to direction of card, we probably don't need to specify them explicitly,
 but can read them off the IDs.)



Mnemosyne 1.4

-synonym handling



Mnemosyne 1.5

-hierarchical categories

-advanced deck manager, with tree view, drag and drop to change categories, 
 count of cards/facts...

-make 'search' behave as a filter

-regular expression search?

-add 'add card' option to deck manager?



Mnemosyne 1.6

-more advanced plugin mechanism, plugin manager

-check out python eggs

-custom card types with custom fields, template for cards

-language specific card types (arabic, japanese, integrated dictionary lookup)

-make more publicity

-template expansion (disable add-vice-versa) ( both {../..} and {}..{})

-cloze deletion (disable add-vice-versa and template expansion)

-mnemosyne analysis as plugin

-save category state as plugin

-remap keys as plugin

-active alert as plugin



Miscellaneous

-don't randomise very first view, because of dependencies

-natural sort order of categories which contain numbers (1 vs 01)

-auto identifying similar cards

-unify number shortcuts (with and without Ctrl)

-pop-up of context info

-forward / backward when previewing cards in the database

-clean up interval when importing from txt

-make file format strings translatable

-paste from clipboard

-preselect all in some text fields, so that the users can start typing
 immediately

-feedback about uploads in GUI / add time-out

-drag and drop of pictures, sound files

-autoupgrade, or at least notify of available upgrade (needs a separate thread)

-mini toolbar for adding pictures and sounds

-remember window size set by the user?

-undo last grade + keyboard shortcut

-icon handling patch Dirk

-'teacher mode' on export, which allows pupils to update previously imported 
 cards, as opposed to adding new cards. Implemented through id's of the form
 T.<fixed card id for all pupils>.<pupil user id>

-manual

-better sound replay support, through clicking on an icon

-integrate Mnemosyne analysis, advanced statistics, history, 
 forgetting index, histogram of grades and intervals... (look at graphs 
 in JMemorize)

-importing cards from rss feed

-clean obsolete latex images / autogenerate them

-make <a> links clickable

-investigate ridiculously large thinking times

-animated GIFs

-DTD for xml format

-priorities for categories?

-determine import / export file type based on suffix 
 (i.e. remove file format field)? Probably not possible, as
 file dialogs only return filenames, not the chosen filter type.

-separate colors per category?

-unify save and export?

-clean duplicates for answers too?

-hints? separate mnemonics?

-corner case: If M > 0 and k < 0 then (a,b) is a local maximum
If M > 0 and k > 0 then (a,b) is a local minimum: eats < ... >



Far away:

-Windows Mobile port (PyQt, venster?, Tkinter?)

-foreign language text widget, integrated with online dict,
 easy creation of new cards



Superkaramba / Plasma

-Check Unicode

-set fonts, left align

-Allow clicking anywhere in the status window, rather than just on the
 text.

-Automatic detection of PyQt executable exit (bug in Superkaramba).
