-store component_manager as session context in each component

-add documentation on how to access context in filter

-hook before and after review controller (for card typing checking)

-have schedulers return id's only

-optimise away cards_from_fact in scheduler
-interval column + index (gain 0.5 sec)
-indices on foreign keys
-no primary keys on linkage
-merge review widget? (gain 0.4 sec)
-test feel without save, test if autocommit works, implement save interval
-review controller (lean controller)
-time full program

-card attribute: type answer
-card attribute: sync status, move to int?, needed?


-get rid of svn


-sync protocol
-log message for updated cards (to enable syncing)?
Partership / sync status per partnership / user id / machine id
Revision history per partnership
Partnership status stored per deck
What about card attributes used in different systems
Backup
Store fact modif/cat modif
Deck name
Import
What if interrupted
Media dir / can refuse large files
XML over JSON
http://effbot.org/zone/element-iterparse.htm
Streaming compression
http://www.linuxtopia.org/online_books/programming_books/python_programming/python_ch33s08.html

API is element per element
Negotiate when to use compression
Unit tests
Licence
other languages in repo


-don't reset cramming scheduler

-is complete check on changing card type does not fire

-fact modification date is not set?

-more tests




-move option to always randomise queue to config screen

-hook up config screen


-time sql when storing dates as int. Move to int? update start_date.py

-get rid of 'revision' (British) in scheduler queue, logger, tips. Use 
 'repetition' for individual repetition, or 'review' for whole process.


-basic graphical statistics

-sql query for statistics


-add 'update_card_active' (or something like that) to be called when
 adding cards or editing a card, so that 'active' is set correctly.
 Make the mechanism customisible with hooks, and document this in 
 card.py.


-cntrl enter in add and edit instead of clicking ok


-make distrib

-warn when importing card type with duplicate id

-write more tests

-don't import * for Qt

-import full path for ui components

-test rollover

-make categories a set?



-import

-on import, activate plugins, created inherited types necessary

-on import don't add cards for which card type is not present

-import: duplicate check, ignore duplicates in answers

-don't change card id on import from old files

-migrate 1.x hack to map card type

-warn when not importing a duplicate card

-save after import, close blueprint

-reset learning ahead queue after import

-xml import tests (wcu, memaid, plconv)

-detect and mark inverses on import

-update XML import/export to new database format

-routines to do mass adding, don't save everytime, cache average easiness

-'teacher mode' on export, which allows pupils to update previously imported
 cards, as opposed to adding new cards. Implemented through id's of the form
 T.<fixed card id for all pupils>.<pupil user id>?



-do review_controller.rebuild_queue after edit deck, clean duplicates, activate cards, 
 configuration 

-backup after unloading, not after exiting

-have hierarchy in plugin names


-test sound


-allow non-unicode filenames: encode/decode in expand/contract path?

-adding a picture under Windows screws up / and \, and case

-need to store parent of category?


-test uploading of logs


-activate categories


-deck editor

-make sure searching for a single unicode character works

-qsortfilter proxy


-partial implementation of type answer (uses special category)


-move 'card type by name' to different place?


-MVC: http://doc.trolltech.com/qq/qq24-delegates.html
 
-upgrade from 1.x to 2.0 migration code: convert deck,
  move latex configuration files?, import user id and config, ...


-update ohloh?


-renamed default data dir on Windows?

-http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/442447?




-alt tabbing gives low res icon.

-http://www.phon.ucl.ac.uk/home/mark/audio/play.htm

-make all subwindows remember their size

-modality of dialogs (mail by Nosai), Qt.WStyle_MinMax | Qt.WStyle_SysMenu))?

-allow edit current card and add card to be open at the same time?

-make file handling more robust, detect all errors (see mail by
 OldGrantonian)

-reenable datadir in setup.py

-make filters more efficients by using regex instead of loops.

-easier function to do tag detection in plugin



-'tooltips' during use: relative path when adding pictures or sound.

-tips (both on startup and on use): right click to add cards or sound, comma to 
 separate cat names, : to separate hierarchies

-comment/tip about not having to do all your scheduled revisions in
 one sitting

-update tooltips, inform Patrick


-chinese pod plugin


-bug in Qt? : shortcuts don't change back after changing 'show answer'
 button text

-bug in Qt? : spaces around images are not respected.

-test: make <a> links clickable / animated GIFs


-update old plugins

-hang on Spanish translation?

-Contributors: Konrad Wojas, Laurent Mauron, Ed Bartosh, Mike Appleby



* After 2.0:

-don't activate plugins until after clicking ok

-respect font in fact editor

-detect wrong current date (last review in the future or way past)

-improve sphinxdocs: autoclass='both', document module members

-show latex errors in GUI?

-checkbox to include inactive cards in statistics?

-pythoscope? http://pypi.python.org/pypi/pythoscope/0.2.1
http://pythoscope.org/
-pylint, pyflakes


-plugin for midi files


Windows Mobile client:

-better way of making default actions visible? Call layout()?
-hook up scheduler rollover
-cramming widget
-implement hide question
-icon
-more complete question box implementation
-installer
-set basedir in registry key
-install only pyc files
-mark card
-play around with MW5torage for easier sync and document this if it works.
-button color


-download media files when giving URL? Store media inside database? Copy 
 it to .mnemosyne by default?


-also allow import compressed backup files from within Mnemosyne

-three sided export?

-option to type right answer

-synonym handling plugin?

-regular expression search?

-add 'add card' option to deck manager?

-mnemosyne analysis as plugin

-active alert as plugin

-card type with prefilled fields

-zooming picture instead of scrollbars?
 
-animated strokes: http://lost-theory.org/ocrat/



* Miscellaneous:

-change file suffix when changing export format

-button after opening fact editor in edit deck to go to next card in the list

-sound recorder

-auto identifying similar cards

-unify number shortcuts (with and without Ctrl)

-forward / backward when previewing cards in the database

-clean up interval when importing from txt

-paste from clipboard

-font and color comboboxes instead of dialogs in card appearance?

-preselect all in some text fields, so that the users can start typing
 immediately

-feedback about uploads in GUI / add time-out

-drag and drop of pictures, sound files

-autoupgrade, or at least notify of available upgrade (needs a separate thread)

-bundle docs

-undo last grade + keyboard shortcut

-http://labs.trolltech.com/blogs/2009/03/12/wysiwyg-html-editor/

-integrate Mnemosyne analysis, advanced statistics, history,
 forgetting index, histogram of grades and intervals... (look at graphs
 in JMemorize)

-importing cards from rss feed

-clean obsolete latex images / autogenerate them

-investigate ridiculously large thinking times

-DTD for xml format

-priorities for categories?

-determine import / export file type based on suffix
 (i.e. remove file format field)? Probably not possible, as
 file dialogs only return filenames, not the chosen filter type.

-unify save and export?

-hints? separate mnemonics?

-swac plugin, smart.fm

-corner case: If M > 0 and k < 0 then (a,b) is a local maximum
If M > 0 and k > 0 then (a,b) is a local minimum: eats < ... >

