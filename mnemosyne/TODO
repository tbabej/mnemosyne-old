-fix testsuite
-code johannes: xml import itself, dialog
-dialog: what happens if browse gets cancelled, remember last used tag, fileformat, import_dir
-todo's below
-tag: additional tag?
-warn when importing xml with learning data
-test option to add tag to card

-rescale window only when answer picture is shown

-merge card appearance with settings

-all grades function as show answer
-pgdwn in preview/edit in card browser
-have page up/up/page down/down keys work to scroll in q and a widgets

-'importing history' text does not show?

-no icon on W7

-comma to separate tag names
-:: to separate hierarchies
-right click to add cards or sound
-hiding pronunciation field
-add card: tab, tab, control Y or control+2

-edit card: tab, tab, control enter

-tip on double-click to tag names and cards to edit them
-right click on tag names in browser

-popup on backlog during review

-right click on criterion names (also tip)

-About dialog, with version and link to source

-layout of "add clone" is not optimal under Windows
-splitters on XP are not visible
http://stackoverflow.com/questions/2545577/qsplitter-becoming-undistinguishable-between-qwidget-and-qtabwidget

-turn off media checking by default, add gui option

-more elaborate plugin description in bottom pane

-make sure all strings are translatable
 http://stackoverflow.com/questions/1114792/how-to-initialize-a-static-char-with-gettetxt-using-local-operating-system-env

-new cards with a >=2 grade can end up on the same day on first interactive rep
 replace set_initial_grade by set_initial_grades(cards)?
-also make sure this is OK when changing card type creates extra cards
-scheduler.spread_sister_cards?
-recheck database for this through plugin

-failed card + new cards in two directions: learn all fw cards, get stuck on failed card. Only
 restarting brings bw cards.

-configure dialog is slow on Windows due to server detect

-also give warning on the client side if a sync failed and a backup needs to happen
-server down should not result in sync conflict
-prevent sync with itself
-binary database upload: configuration changes (fonts, ...) are not applied
-syncing an empty database twice results in a spurious sync cycle detection. Also happens after 
 syncing empty client and empty server database, then adding data to the server, and resyncing
-if the server is empty, allow sync from non-empty client and change server user id.
-if dialog like edit card or browse cards is open on server, try to close it when sync comes in (+findChildren
    QWidgetList list = QApplication::topLevelWidgets();
    for (int i = 0; did_close && i < list.size(); ++i) {
        w = list.at(i);
        if (w->isVisible() && w->windowType() != Qt::Desktop) {
            did_close = w->close();
            list = QApplication::topLevelWidgets();
            i = -1;
-when sync server is running, it seems possible to start a second copy of Mnemosyne, which just complains about
 'unable to start sync server'

-migrate science server machine

-Mnemosyne console, example script to add cards, make possible on Windows

-ask about card browser speed. Try without decoration. shulgi: Core Duo 2.1 Ghz

-card type clone: rename and delete, both in card browser and card type browser

-remove upgrade_beta_6.py

-upgrade to qt 4.7.4, retest progress bars
-make distrib under linux
-bundle webserver with install

-test upgrade on OSX: remove library/Mnemosyne2, make sure you have 1.x in library/Mnemosyne.
 after upgrade there should be 2.0 files in library/Mnemosyne and a backup in library/Mnemosyne_1

-implement duplicate checking. Also synonym checking? Add then standard tags.
-autorun after import, browse with edit, but not sync
-do review_controller.rebuild_queue, reload counter after clean duplicates?

-activate cards: 'having any of these tags:' is not aligned with tag with tag tree

-Windows makefile: ln -s pyuic4.bat pyuic, full path to python, py2exe needed, rename mnemosyne to mnemosyne.py, numpy
-py2exe: downloads 64 bit by default
-py2exe: download: http://www.microsoft.com/downloads/en/details.aspx?FamilyID=9b2da534-3e03-4391-8a4d-074b9f2bc1bf&displaylang=en
-put __init__.py in numpy.distutils.test
-set default matplotlib backend: http://www.py2exe.org/index.cgi/MatPlotLib
-run test suite under windows

-add plugin example on card type specific renderer
-add doc on how to write plugin to sfinx doc

-Qt bug? different font size in edit box and in css
-Qt bug? Cannot restore scroll_to column in card browser after tag rename.
-Qt bug? Cntl+a select all in card browser only selects all the prefetched entries
-Qt bug? insertAtTop on tags combobox in add_cards does not seem to work
-Qt bug? '(arabic) arabic' in lineedit shows up as 'arabic) arabic)' in webkit
-Qt bug? choose named colours: crash
-Qt bug? Windows: progress bars for sync often crash when they get called too quickly
 (reproduce: download_binary_database for HTTP 1.0)
-Qt bug? cursor is always black, also on a black background
 https://bugreports.qt.nokia.com/browse/QTBUG-52
-Qt bug? error dialogs don't allow copying the text from it on all platforms
-Qt bug? svg Mnemosyne watermark for tip and getting started does not work under Linux
-coverage bug?: default_controller().sync() does not seem to get picked up.

-workaround for short ogg files. Make short mp3 workaround linux only. Test if silence files
 are in distrib.

-windows: test unicode filenames in sync protocol
-test running from usb, update instructions
-add tests with unicode in data_dir

-leech detection

-Faq about how to pronounce Mnemosyne

-import
-update data if same id present on import
-on import, activate plugins, created card types if necessary
-on import don't add cards for which card type is not present
-warn when not importing a duplicate card
-covert to map type on import
-xml import tests (wcu, memaid, plconv)
-rewrite test_mem_import test_sch to go through the controller
-option to detect and mark inverses on import?
-update XML import/export to new database format
-make XML import tolerant to extra new lines in header
-warn when importing card type with duplicate id
-option to add tags on import
-mention that txt format does not have tag info?
-save import dir
-make sure after import all sync events fire
-make sure enter does not close the import dialog
-make sure we log new card creation on import
-make sure to detect media and do slash normalisation from importing text files
-utf16?
-make sure there is an error message to the user if xml import fails.
-mention Mnemosyne XML instead of XML

-card appearance: show preview live

-criterion applier: compare query time for  a in [1,2] vs a=1 or a=2

-docs on dealing with synonyms and words which have multiple meanings (if implemented, update card converter too)
 check fonts for new meanings, check decorators

-http://gitorious.org/hooq/hooq? Qt4 testing
 http://www.fredemmott.co.uk/blog/2010/01/18/Qt4%20GUI%20Testing%20with%20Hooq

-Select saved set, switch tab to other criterion (deselects set) and switch back to original one.
 The set should then be autoselected again.
-being able to edit existing set, replace input box by combobox with old sets
-removing plugin with criterion should not happen if it is in use. 
-warn when syncing and the other criterion plugin is not present?
-make 'grade activity criterion' an official plugin? Add tests?

-plugin to hide toolbar (requested twice)

-hoop uk dialogs in UDP

-cntrl-c shortcut for question and answer

-can the sync client always reconnect to a sync server if an error occured?

-new translation infrastructure
-handle deferred translation
-different translators for different users?

-integrate webserver in GUI, login mechanism, session_token, cookies
-add webserver in testsuite, case when the database is empty
-make empty lines respect font size
-sound files suffer from connection reset by peer. Try other WSGI server?
-add html caching support for media files
-send absolute filenames when running server locally, so that we don't need to
 send them over http

-card formatting options on remote web server: act on config info that the client sent across
 Add hook in set_partner_info
-check if online username is still free
-threading/multiprocess for sync and review servers? Threading prob. works automatically if persistent
 connections are supported (CherryPy), perhaps also for multiprocess. Multiprocess probably only useful
 to get round the GIL, which is only useful on a dedicated server.
-sync to empty webserver (add 'database_is_empty' to server and act upon it)
-add support for error messages on protocol mismatch, expired credit
-add support for render chain selection
-media handler?
-create latex dir in filter plugin?
-media on dropbox?
-plugin to store backups on dropbox

-larger interval for initial grade 5?

-condition coverage
 http://lautaportti.wordpress.com/2011/05/07/test-coverage-analysis/

-have hierarchy in plugin names

-heising card type (radical, number of strokes)

-auto vacuum after every N openings? What about WM?

-http://www.mblondel.org/journal/2008/08/01/web-canvas/

-infrastructure to make it easier to type certain symbols

-mark cards plugin

-move button group in review widget to designer code after pyqt upgrade. 
 Also possible in add cards?

-partial implementation of type answer (none/all/special tag? Db Attribute? Button?)
-draw answer, make configurable by card type

-more plugin examples: file format, custom tag, activate all cards,
 last grade filter

-when pasting from a webpage, font formatting in 'add cards' is inconsistent.

-ask people about biggest gripe in Mnemosyne, things that did not behave as expected

-copy card and create a new one that way

-explain license on our website

-grep through TODO's in source code

-make filters more efficients by using regex instead of loops.

-easier function to do tag detection in plugin

-join add tags/remove tags in a single dialog? http://bit.ly/oOK27n 


pylint:
	find ./mnemosyne/libmnemosyne/ -name \*.py | while read f ; do echo $f;pylint $f 2>&1|grep ^E:; done

-compression on backup to reduce write time to SD card?
-move from httplib to urllib2 to make use of automatic proxy detection? However, could have
 an impact on performance/streaming upload.

-'shared deck' export
-is 'client_info["shared_dack"] the best way to signal this? Or have entirely new
 server API functions?
-make sure not send across learning data, e.g. by calling reset_learning_data on
 a copy in _log_entry() for card
-server.py
    def open_shared_database(self, database_name, username):

        """A shared database only contains log entries to specify the card
        contents, not the learning data. Make sure this is read-only for
        everybody except the original author. Can have side effects like
        listing the shared deck on a website, ... .

        """
-client.py

    def upload_shared_database(self):
        raise NotImplementedError

        # client_info["shared_deck"] = True
        # self.login(hostname, port, username, password)
        # self.put_client_log_entries()
        # self.put_client_media_files()
        # no self.get_sync_finish(), no partnership update.
    
        # Refactor put_client_log_entries to have arguments number_of_entries,
        # entries, where entries is an iterator that does not pass through the
        # log put rather only creates new cards and facts events.     
        # Ditto for media files.

        # An upload always overrides the previous one. The alternative would be
        # to have to generate artificial deletion events for cards which are
        # still in the original author's database, but which he no longer wants
        # to share.

    def download_shared_database(self):
        raise NotImplementedError
    
        # client_info["shared_deck"] = True
        # backup_file = self.database.backup()
        # self.login(hostname, port, username, password)
        # self.get_client_log_entries()
        # self.get_client_media_files()

        # download will never delete cards, even if they were in a previous
        # version of the shared deck. TODO: is this good or bad? If we do want
        # this, we do need to complicate the protocol and worry about creating
        # artificial deletion events?

-    def card_from_log_entry(self, log_entry):
        # When syncing from a shared deck, don't update repetition data, but do
        # update fact views, card types, tags. (TODO: think about changing card
        # types more carefully.) (TODO: make sure we don't override our own
        # existing tags.)
        # Note that shared cards do have the same id's across all users, this
        # will give extra info for the science server (but means that in this
        # case the science server will need to look at user_ids too to
        # differentiate the cards.
-    def apply_log_entry(self, log_entry):
        # When (re)downloading shared decks, there will be only ADDED_ events,
        # not UPDATED_events. Convert the former to the latter if the objects
        # were already in the database.
-make sure to enforce read-only, preferable through server itself, not through
 open_shared_database
-if there are actual card based clients, remove pragma: no cover and test these as well

-try adding images to card browser.
http://developer.qt.nokia.com/faq/answer/how_can_i_add_a_non-resource_image_to_a_qtextdocument
using Qwebit http://stackoverflow.com/questions/3142132/how-to-use-a-qgraphicswebview is not
a good alternative, as it does not obey selection coloring
-Tree widgets: save expanded/collapsed state of nodes
-when deleting cards, only mention sister cards if there are actually sister cards
-allow users to show/hide/rearrange columns
-show full text on mouseover in case text does not fit in column
-integrate sqlite with ICU for unicode/chinese sorting:
 http://stackoverflow.com/questions/611459/how-to-sort-text-in-sqlite3-with-specified-locale
-ellisis in QTextDocument in card browser?
-rewrite card browser in C++, or at least delegate? In that case, move question and answer getting
 to data, and eliminate the text colors at selection using Qt.
-inline editing in card browser?
-editing names of card type clones, also in browser
-tag browser editor of tag names does not capture focus out event, so card count is not redrawn.
-save selection state (not checkstate) in tag and card type browser through hibernation
-Qt performance problem with selectRow
-"Browse Cards" dialog box. "Preview card" option should have a keyboard
 shortcut.

-send across cards as pictures (see stubs in client.py and server.py). Add resolution to filename? (device rotation)
-Tim's gogorender plugin
-option purge history, refactor logging test. Should only happen in no other sync partners are
 interested in it

-website redesign? like http://hanzim.com/download.php

-don't activate plugins until after clicking ok

-card type with prefilled fields

-update ohloh?

-synchronise history folder to guard against mobile clients not uploading their
 logs, even though they set upload_logs=True?

-skritter/cpod interop mail

-better supermemo import

-API for statusbar widgets

-get rid of mp3 clip prevention?


-detect wrong current date (last review in the future or way past)

-improve sphinxdocs: autoclass='both', document module members

-show latex errors in GUI?
-adding latex cards on non-latex device currently requires 2 syncs with main server to
 show the images

-add media to a card but then abandonig/editing the card keeps the media in media directory
 (they are not referenced in the database, though)

-pythoscope? http://pypi.python.org/pypi/pythoscope/0.2.1
http://pythoscope.org/
-pyflakes?

-hover over extra hanzi information, hanzi statistics

-plugin for midi files

-chinese pod plugin

-"reschedule" cheating plugin

-improve learn ahead, by learing ahead per day and prioritising within each day

http://lost-theory.org/python/ltchinese/


-control B format character in supermemo import?


Windows Mobile client:

If your phone has a touchscreen use the pocket pc version. Otherwise try the smartphone version. 

-integrate sync
-add full html header to standard renderer. Still need MW table hack?
-test and time renderer on MW. Need to cache it?
-test no_pregenerated_data on WM
-repaint_now useful?
-better way of making default actions visible? Call layout()?
-hook up scheduler rollover
-document save after n rep
-cramming widget, cache counters
-implement hide question
-icon
-more complete question box implementation
-installer
-set basedir in registry key
-install only pyc files
-mark card
-button color
-sonud: http://watersprite.awardspace.com/python/


Multiuser statistics analysis:

-break out card id stringss to a different table and use interger _id in the rest of
 the database to save space
-move times from a later start date to save space?
-investigate origin of ._ logs
-don't do card checks for post 2.0

-download media files when giving URL

-webserver: map card type does not really hide the question box, just blanks the question

-synonym handling plugin?

-regular expression search?

-add 'add card' option to deck manager?

-active alert as plugin
 
-animated strokes: http://lost-theory.org/ocrat/

-congratulations screen

-language text based card types, with 'graduating' from word cards once they are learned enough,
 and only keeping sentence cards (mail by querido, scheduler feedback needed)

-scheduler with minute granularity?

-widget to create new card types. Makes sure the criteria updating code gets called.


* Miscellaneous:

-change file suffix when changing export format

-sound recorder

-store _fact_ids_learned in config, such that they persist over sessions?

-auto identifying similar cards

-unify number shortcuts (with and without Ctrl)

-forward / backward when previewing cards in the database

-clean up interval when importing from txt

-paste from clipboard

-font and color comboboxes instead of dialogs in card appearance?

-preselect all in some text fields, so that the users can start typing
 immediately

-feedback about uploads in GUI / add time-out

-drag and drop of pictures, sound files

-autoupgrade, or at least notify of available upgrade (needs a separate thread)

-bundle docs

-undo last grade + keyboard shortcut. Disable undo after logs have been purged

-http://labs.trolltech.com/blogs/2009/03/12/wysiwyg-html-editor/

-integrate Mnemosyne analysis, advanced statistics, history,
 forgetting index, histogram of grades and intervals... (look at graphs
 in JMemorize)

-research papers: http://act-r.psy.cmu.edu/people/index.php?id=11

-importing cards from rss feed

-clean obsolete latex images

-investigate ridiculously large thinking times

-determine import / export file type based on suffix
 (i.e. remove file format field)? Probably not possible, as
 file dialogs only return filenames, not the chosen filter type.

-swac plugin, smart.fm

-corner case: If M > 0 and k < 0 then (a,b) is a local maximum
If M > 0 and k > 0 then (a,b) is a local minimum: eats < ... >

